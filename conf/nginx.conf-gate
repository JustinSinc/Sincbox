## /etc/nginx/nginx.conf
# a basic nginx config file for my personal site
## example certbot command to generate dhparams and letsencrypt certs for this site
# $ sudo openssl dhparam -out /etc/nginx/ssl/dhparam.pem 2048
# $ wget https://dl.eff.org/certbot-auto && chmod a+x certbot-auto
# $ sudo certbot-auto certonly --webroot -w /var/www/html --rsa-key-size 2048 -d justinsinkula.com -d shitposter.io -d a.shitposter.io -d znc.shitposter.io -d blaming.me -d stop.blaming.me -d cdn.seednode.co -d frozenbutthang.com --hsts --uir --agree-tos 

# run nginx as the www-data user
user www-data;

# set the number of workers equal to the cpu count
worker_processes auto;

# set the pid file location
pid /run/nginx.pid;

# set the maximum number of simultaneous connections
events {
	worker_connections 768;
}

# configuration for the webserver itself
http {
	# limit simultaneous connections to protect against slowloris attacks
	limit_conn_zone $binary_remote_addr zone=addr:10m;
	limit_conn addr 64;

	# tell nginx what sort of content we'll be displaying
	include mime.types;
	default_type application/octet-stream;
	sendfile on;

	# redirect all non-HTTPS requests to HTTPS
	server {
		listen 80;
		listen [::]:80;
		server_name a.shitposter.io shitposter.io justinsinkula.com blaming.me stop.blaming.me znc.shitposter.io frozenbutthang.com cdn.seednode.co unifi.seednode.co;
		return 301 https://$host$request_uri;
	}

	# set the default index file
	index index.html;

	# listen for requests to https://a.shitposter.io/ and its subdirectories
	server {
		# this nginx vhost is only listening for connections to a.shitposter.io
		server_name a.shitposter.io;

		# enable fancy indexing
		fancyindex on;
		fancyindex_exact_size off;

		# include shared config
		include /etc/nginx/conf.d/shared.conf;

		# set root directory
		root /var/www/html/a.shitposter.io;

		location / {
			# require login
			auth_basic "Restricted access";
			auth_basic_user_file /etc/nginx/.htpasswd;
		}
	}

	# listen for requests to https://frozenbutthang.com/
	server {
		# this nginx vhost is only listening for connections to frozenbutthang.com
		server_name frozenbutthang.com;

		# include shared config
		include /etc/nginx/conf.d/shared.conf;

		# set root directory
		root /var/www/html/frozenbutthang.com;

		# disable access logging
		access_log off;

		# error pages
		error_page 404 502 503 504 /error.html;

		location = /error.html {
			internal;
		}

		location = / {
			# hide .html extension
			rewrite ^(/.*)\.html(\?.*)?$ $1$2 permanent;

			# serve landing page
			index index.html;

			# serve landing page, requested html document, then uri in that order
			# otherwise 404
			try_files $uri/index.html $uri.html $uri/ $uri =404;

			# allow caching of static files
			expires max;
		}
	}

	# listen for requests to https://justinsinkula.com/
	server {
		# this nginx vhost is listening for several domain names
		server_name justinsinkula.com shitposter.io blaming.me stop.blaming.me;

		# include shared config
		include /etc/nginx/conf.d/shared.conf;

		# set root directory
		root /var/www/html/justinsinkula.com;

		# disable access logging
		access_log off;

		# error pages
		error_page 404 502 503 504 /error.html;
		
		location = /error.html {
			internal;
		}

		location = /grandip {
			default_type text/plain;
		}

		location /gmn/ {
			# require login
			auth_basic "Restricted access";
			auth_basic_user_file /etc/nginx/.htpasswd_gmn;

			# enable fancy indexing
			fancyindex on;
			fancyindex_exact_size off;
		}

		location /pics/ {
			# require login
			auth_basic "Restricted access";
			auth_basic_user_file /etc/nginx/.htpasswd_photos;
		}

		location /watchme/ {
			# redirect to terminal live stream
			proxy_pass http://localhost:1338/;

			# websockets support
			proxy_http_version 1.1;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection "Upgrade";
			proxy_set_header Host $http_host;
			proxy_cache_bypass $http_upgrade;

			# disable proxy buffering
			proxy_buffering off;
			proxy_redirect default;

			# disable caches
			expires 0;
	
			# a man is not dead while his name is still spoken
			add_header X-Clacks-Overhead "GNU Terry Pratchett" always;
		}
	}
	
	# listen for requests to https://cdn.seednode.co/
	server {
		# this nginx vhost is only listening for connections to cdn.seednode.co
		server_name cdn.seednode.co;
		
		# include shared config
		include /etc/nginx/conf.d/shared.conf;
		
		# set root directory
		root /var/www/html/cdn.seednode.co;

		# disable access logging
		access_log off;

		# error pages
		error_page 404 502 503 504 /error.html;

		location = /error.html {
			internal;
		}

		# these file types are typically static and can be cached long-term
		location ~* \.(?:jpg|jpeg|gif|png|ico|gz|svg|svgz|mp4|ogg|ogv|webm|pdf)$ {
			expires 30d;
			add_header Cache-Control "public";
		}

		# enable fancy indexing
		fancyindex on;
		fancyindex_exact_size off;
		fancyindex_ignore ^z$ ^error.html$ ^majora.png$ ^favicon.ico$ ^robots.txt$ ^pics$;
		
		# serve files located in /
		location / {
			# First attempt to serve request as file, then
			# as directory, then fall back to displaying a 404.
			try_files $uri $uri/index.html $uri.html $uri/ =404;
		}

		# serve all files in /txt/ as plain text
		location /txt/ {
			default_type text/plain;
		}

		# append trailing slash to /pics/ if needed
		location ~ /pics {
			rewrite ^([^.\?]*[^/])$ $1/ permanent;
		}
	}

	server {		
		# listen on both ipv4 and ipv6
		listen 80;
		listen [::]:80;
				
		# this nginx vhost is listening for the cleartext cdn
		server_name old.blaming.me;

		# disable gzip to prevent CRIME and other side-channel attacks
		gzip off;

		# block clickjacking attacks
		add_header X-Frame-Options DENY;

		# disable content-type sniffing
		add_header X-Content-Type-Options nosniff;

		# force-enable cross-site scripting protection
		add_header X-XSS-Protection "1; mode=block";

		# enable content security policy
		add_header Content-Security-Policy "default-src http://old.blaming.me";

		# enable referrer policy
		add_header Referrer-Policy "strict-origin";

		# enable feature policy
		add_header Feature-Policy "geolocation 'none'; midi 'none'; sync-xhr 'none'; microphone 'none'; camera 'none'; magnetometer 'none'; gyroscope 'none'; speaker 'none'; fullscreen 'self'; payment 'none'";

		# honour the fallen
		add_header X-Clacks-Overhead "GNU Terry Pratchett" always;

		# set root directory
		root /var/www/html/cdn.seednode.co/pics;

		# disable access logging
		access_log off;

		# error pages
		error_page 404 502 503 504 /error.html;

		location = /error.html {
			internal;
		}

		# these file types are typically static and can be cached long-term
		location ~* \.(?:jpg|jpeg|gif|png|ico|gz|svg|svgz|mp4|ogg|ogv|webm|pdf)$ {
			expires 30d;
			add_header Cache-Control "public";
		}

		# serve files located in /
		location / {
			# First attempt to serve request as file, then
			# as directory, then fall back to displaying a 404.
			try_files $uri $uri/index.html $uri.html $uri/ =404;
		}
	}

	# listener for znc control panel
	server {
		# this nginx vhost is only listening for connections to znc.shitposter.io
		server_name znc.shitposter.io;

		# include shared config
		include /etc/nginx/conf.d/shared.conf;

		# forward requests to znc webadmin
		location / {
			# require login auth_basic "Restricted access"; 
			auth_basic_user_file /etc/nginx/.htpasswd;
			
			# pass requests to znc webadmin
			proxy_pass https://127.0.0.1:1337/;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		}
	}		
}
