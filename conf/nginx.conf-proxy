# /etc/nginx/nginx.conf
# a basic nginx config file to redirect requests to ports
# for use on Sinc's container hosting service

# designed to be run on alpine linux as an appliance with two network interfaces;
# one WAN-facing and one on a LAN with the NATed hosts which it will be proxying

# run nginx as user nobody
user nobody;
worker_processes  2;

# set the maximum number of simultaneous connections
# since this is a proxy server, this is set higher than default
events {
    worker_connections  2048;
}

# configuration for the web server itself
http {

    # required settings for SSL-enabled reverse proxies to support Websockets
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_http_version 1.1;

    # extend proxy timeout time to prevent issues with proxied websockets connections
    proxy_read_timeout 120s;

    # tell nginx what sort of content we'll be displaying
    include       mime.types;
    default_type  application/octet-stream;
    sendfile        on;

    # redirect all non-HTTPS requests to HTTPS
    server {
	listen 80;
	server_name seednode.co;
	return 301 https://$host$request_uri;
    }

    # listen for requests to https://seednode.co/ and its subdirectories
    server {
        listen       443;
	
	# disable gzip to prevent CRIME and other side-channel attacks
        gzip off;
	
	# this nginx vhost is only listening for connections to seednode.co
	server_name  seednode.co;

	# strip .html extensions
        rewrite ^(/.+)/.html$ $scheme://$host$1 permanent;

	# strip trailing /index.html
	rewrite ^(.*)/index.html$ $1 permanent;
	
	# enable LetsEncrypt SSL certs
	ssl on;
	ssl_certificate /etc/letsencrypt/live/seednode.co/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/seednode.co/privkey.pem;
	ssl_dhparam ssl/dhparam.pem;
	
	 # enable http public key pinning extension (hpkp)
        add_header Public-Key-Pins 'pin-sha256="YLh1dUR9y6Kja30RrAn7JKnbQG/uEtLMkBgFF2Fuihg="; pin-sha256="Cg2nS+yDEqJGTPoVwUjX66obkY4zkopMXOjtZ7yJR3g="; max-age=2592000; includeSubDomains';

        # enable http strict transport security (hsts)
        add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
	
	# disable insecure SSL implementations and ciphers
	ssl_protocols TLSv1.2;
        ssl_prefer_server_ciphers on;
        ssl_ecdh_curve secp384r1;
        ssl_ciphers 'AES256+EECDH:AES256+EDH:!aNULL';

	# disable ssl session tickets to ensure perfect forward secrecy
        ssl_session_cache shared:SSL:10m;
	ssl_session_timeout 10m;
        ssl_session_tickets off;

        # enable OSCP stapling
        ssl_stapling on;
        ssl_stapling_verify on;
        resolver 8.8.8.8 8.8.4.4 valid=300s;
        resolver_timeout 5s;

        # block clickjacking attacks
        add_header X-Frame-Options DENY;

        # disable content-type sniffing
        add_header X-Content-Type-Options nosniff;

        # force-enable cross-site scripting protection
        add_header X-XSS-Protection "1; mode=block";

	location = /index.html {
            rewrite  ^ / permanent;
	    try_files /index.html =404;
	}

        location ~* ^.+\.(wav|ogg|mp3|txt|tar|rar|gz|zip)$ {
            # check if a given URI exists locally first
            root /opt/local/files;
            try_files $uri $uri/;
        }

        location / {
            # if not, redirect to my landing page at seednode.co/
            proxy_pass http://10.0.0.3:80/;
        }

        location /watchme/ {
            # redirect to terminal broadcast page
            proxy_pass http://208.110.227.11:1338/;

            # Websocket support (from version 1.4)
            proxy_set_header x-forwarder-for $proxy_add_x_forwarded_for;
            proxy_http_version 1.1;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header X-NginX-Proxy true;
            proxy_ssl_session_reuse off;
            proxy_set_header Host $http_host;
            proxy_redirect off;
        }

        location /tryme/ {
            # redirect to alpine linux container demo
            proxy_pass http://208.110.227.11:1337/;

            # Websocket support (from version 1.4)
            proxy_set_header x-forwarder-for $proxy_add_x_forwarded_for;
            proxy_http_version 1.1;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header X-NginX-Proxy true;
            proxy_ssl_session_reuse off;
            proxy_set_header Host $http_host;
            proxy_redirect off;
        }
    }
}
