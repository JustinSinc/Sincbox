# /etc/nginx/nginx.conf 
# a basic nginx config file for offering rtmp streams

# designed for nginx-1.14.0 using the nginx-rtmp-module (https://github.com/arut/nginx-rtmp-module)

##  example certbot command to generate dhparams and letsencrypt certs for this site
# $ sudo openssl dhparam -out /etc/nginx/ssl/dhparam.pem 2048
# $ sudo certbot certonly --webroot -w /var/www/html/stream.seednode.co/ --rsa-key-size 2048 -d stream.seednode.co --uir --agree-tos --redirect

# run as an unprivileged user
user www-data;

# spin up one nginx process per core on the host
worker_processes auto;

# load the rtmp dynamic module
load_module "modules/ngx_rtmp_module.so";

# set the maximum number of clients per worker process
events {
	worker_connections 1024;
}

http {
	# limit simultaneous connections to protect against slowloris attacks
	limit_conn_zone $binary_remote_addr zone=addr:10m;
	limit_conn addr 64;

	# redirect all http traffic to https
	server {
		listen 80;
		server_name stream.seednode.co;
		return 301 https://$host$request_uri;
	}

	# server the page over https	
	server {
		# listen on the https port
		listen 443 ssl http2;

		# disable gzip to prevent CRIME and other side-channel attacks
		gzip off;

		# this nginx vhost is only listening for connections to seednode.co
		server_name stream.seednode.co;

		# enable LetsEncrypt SSL certs
		ssl_certificate /etc/letsencrypt/live/stream.seednode.co/fullchain.pem;
		ssl_certificate_key /etc/letsencrypt/live/stream.seednode.co/privkey.pem;
		ssl_dhparam ssl/dhparam.pem;

		# establish a new tls connection for upstream servers
		proxy_ssl_session_reuse off;

		# disable insecure SSL implementations and ciphers
		ssl_protocols TLSv1.2;
		ssl_prefer_server_ciphers on;
		ssl_ecdh_curve secp384r1;
		ssl_ciphers 'AES256+EECDH:AES256+EDH:!aNULL';

		# disable ssl session tickets to ensure perfect forward secrecy
		ssl_session_cache shared:ssl_session_cache:10m;
		ssl_session_timeout 10m;
		ssl_session_tickets off;

		# enable http strict transport security (hsts)
		add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
		
		# block clickjacking attacks
		add_header X-Frame-Options DENY;

		# disable content-type sniffing
		add_header X-Content-Type-Options nosniff;

		# force-enable cross-site scripting protection
		add_header X-XSS-Protection "1; mode=block";

		# set the root for nginx paths
		root /var/www/html/stream.seednode.co;

		location /live {
			# tell the server how to handle m3u8 playlists
			types {
				application/vnd.apple.mpegurl m3u8;
			}

			# no need to cache streaming video
			add_header Cache-Control no-cache;

			# allow cross-domain embedding
			add_header Access-Control-Allow-Origin *;
		}

		# serve the flowplayer page from stream.seednode.co
		location / {
			root /var/www/html/stream.seednode.co;
			index index.html;
		}
	}	
}

# configure the nginx-rtmp-module
rtmp {
	server {
		# listen on the default rtmp port
		listen 1935;
		# increase chunk size to reduce overhead
		chunk_size 8192;
		# allow anyone to stream to the server
		allow play all;
		# allow livestreaming via flowplayer
		application live {
			# broadcast a one-to-many stream
			live on;
			# skip sending rtmp metadata
			meta off;
			# enable http live streaming
			hls on;
			# create a subdirectory of hls/ for each streamer
			hls_nested on;
			# set the path for hls streams
			hls_path /var/www/html/stream.seednode.co/hls;
			# minimize stream latency by streaming four one-second fragments at a time
			hls_fragment 1;
			hls_playlist_length 4;
		}
	}
}
